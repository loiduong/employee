[{"/Users/loiduong16/Documents/employee/src/index.js":"1","/Users/loiduong16/Documents/employee/src/reportWebVitals.js":"2","/Users/loiduong16/Documents/employee/src/routers.js":"3","/Users/loiduong16/Documents/employee/src/reducers/rootReducers.js":"4","/Users/loiduong16/Documents/employee/src/screens/employee/Employees.js":"5","/Users/loiduong16/Documents/employee/src/screens/employee/EmployeeCreate.js":"6","/Users/loiduong16/Documents/employee/src/screens/employee/reducers.js":"7","/Users/loiduong16/Documents/employee/src/screens/employee/EmployeeUpdate.js":"8","/Users/loiduong16/Documents/employee/src/screens/employee/services.js":"9","/Users/loiduong16/Documents/employee/src/screens/employee/EmployeeForm.js":"10","/Users/loiduong16/Documents/employee/src/screens/employee/validations.js":"11","/Users/loiduong16/Documents/employee/src/screens/employee/components/InputCnp.js":"12","/Users/loiduong16/Documents/employee/src/services/request/requestService.js":"13","/Users/loiduong16/Documents/employee/src/utils/object.js":"14"},{"size":814,"mtime":1607660308235,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1607570942959,"results":"17","hashOfConfig":"16"},{"size":1538,"mtime":1607660312766,"results":"18","hashOfConfig":"16"},{"size":273,"mtime":1607597118600,"results":"19","hashOfConfig":"16"},{"size":5698,"mtime":1607660964545,"results":"20","hashOfConfig":"16"},{"size":1128,"mtime":1607658047535,"results":"21","hashOfConfig":"16"},{"size":488,"mtime":1607608333735,"results":"22","hashOfConfig":"16"},{"size":1731,"mtime":1607658989873,"results":"23","hashOfConfig":"16"},{"size":1298,"mtime":1607657717739,"results":"24","hashOfConfig":"16"},{"size":2493,"mtime":1607662336583,"results":"25","hashOfConfig":"16"},{"size":1240,"mtime":1607662506210,"results":"26","hashOfConfig":"16"},{"size":1026,"mtime":1607655731193,"results":"27","hashOfConfig":"16"},{"size":2100,"mtime":1607655242419,"results":"28","hashOfConfig":"16"},{"size":337,"mtime":1607584532443,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"166q0gw",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/loiduong16/Documents/employee/src/index.js",[],["61","62"],"/Users/loiduong16/Documents/employee/src/reportWebVitals.js",[],"/Users/loiduong16/Documents/employee/src/routers.js",[],"/Users/loiduong16/Documents/employee/src/reducers/rootReducers.js",[],"/Users/loiduong16/Documents/employee/src/screens/employee/Employees.js",[],"/Users/loiduong16/Documents/employee/src/screens/employee/EmployeeCreate.js",[],"/Users/loiduong16/Documents/employee/src/screens/employee/reducers.js",[],"/Users/loiduong16/Documents/employee/src/screens/employee/EmployeeUpdate.js",["63"],"import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { EmployeeService } from './services';\nimport EmployeeForm from './EmployeeForm';\nimport { store } from '../..';\nimport { EMPLOYEE_DETAIL } from './reducers';\n\nconst useStyles = makeStyles({\n    wrapForm: {\n        display: 'flex',\n        alignItems: 'center',\n        marginTop: 50,\n        flexDirection: 'column'\n    },\n    txtTitle: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginBottom: 15\n    }\n});\n\nconst EmployeeUpdate = (props) => {\n    const classes = useStyles();\n    const { id } = props.match.params;\n\n    useEffect(() => {\n        _fetchData();\n    }, [])\n\n    useEffect(() => {\n        return () => {\n            store.dispatch({\n                type: EMPLOYEE_DETAIL,\n                data: null\n            })\n        };\n    }, [])\n\n    const _fetchData = () => {\n        EmployeeService.getEmployee(id)\n            .then(res => {\n                store.dispatch({\n                    type: EMPLOYEE_DETAIL,\n                    data: res\n                })\n            })\n            .catch(err => {\n                alert(err);\n            })\n    }\n    const _onSubmit = (values) => {\n        EmployeeService.updateEmployee(id, values)\n            .then(res => {\n                _fetchData();\n                alert(\"Updated successfully\");\n            })\n            .catch(err => {\n                alert(\"Update failed\")\n            })\n    }\n\n    return (\n        <div className={classes.wrapForm}>\n            <div className={classes.txtTitle}>Update employee</div>\n            <EmployeeForm onSubmit={(values) => _onSubmit(values)} />\n        </div>\n    )\n}\n\nexport default EmployeeUpdate","/Users/loiduong16/Documents/employee/src/screens/employee/services.js",[],"/Users/loiduong16/Documents/employee/src/screens/employee/EmployeeForm.js",["64"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form';\nimport { Prompt } from \"react-router-dom\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Button from '@material-ui/core/Button';\n\nimport validate from './validations';\nimport InputCpn from './components/InputCnp';\n\nconst useStyles = makeStyles({\n    input: {\n        minWidth: 500,\n        marginBottom: 10\n    },\n    wrapBtn: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    }\n});\n\n\nconst radioButton = ({ input, ...rest }) => (\n    <FormControl>\n        <RadioGroup {...input} {...rest}>\n            <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n            <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n            <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n        </RadioGroup>\n    </FormControl>\n)\n\n\nlet EmployeeForm = props => {\n    const classes = useStyles();\n    const { handleSubmit, dirty, reset, isReset } = props;\n\n    useEffect(() => {\n        if (isReset) {\n            reset()\n        }\n    }, [isReset])\n    return (\n        <form onSubmit={handleSubmit}>\n            <InputCpn type=\"text\" name=\"firstName\" label=\"First Name\" />\n            <InputCpn type=\"text\" name=\"lastName\" label=\"Last Name\" />\n            <InputCpn type=\"text\" name=\"email\" label=\"Email\" />\n            <InputCpn type=\"text\" name=\"phone\" label=\"Phone\" />\n            <div>\n                <Field name=\"gender\" component={radioButton} />\n            </div>\n            <div />\n            <Prompt when={dirty} message=\"Form has been modified. You will loose your unsaved changes. Are you sure you want to close this form?\" />\n            <div className={classes.wrapBtn}>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Submit\n                </Button>\n            </div>\n        </form>\n\n    )\n}\n\n\nEmployeeForm = reduxForm({\n    form: 'EmployeeForm', // a unique identifier for this form\n    validate,\n    enableReinitialize: true\n})(EmployeeForm)\n\nEmployeeForm = connect(\n    state => ({\n        initialValues: state.employeesReducers.employee\n    }),\n)(EmployeeForm)\n\nexport default EmployeeForm\n","/Users/loiduong16/Documents/employee/src/screens/employee/validations.js",[],"/Users/loiduong16/Documents/employee/src/screens/employee/components/InputCnp.js",[],"/Users/loiduong16/Documents/employee/src/services/request/requestService.js",[],"/Users/loiduong16/Documents/employee/src/utils/object.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":29,"column":8,"nodeType":"71","endLine":29,"endColumn":10,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"73","line":47,"column":8,"nodeType":"71","endLine":47,"endColumn":17,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: '_fetchData'. Either include it or remove the dependency array.","ArrayExpression",["77"],"React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [_fetchData]",{"range":"83","text":"84"},"Update the dependencies array to be: [isReset, reset]",{"range":"85","text":"86"},[691,693],"[_fetchData]",[1368,1377],"[isReset, reset]"]